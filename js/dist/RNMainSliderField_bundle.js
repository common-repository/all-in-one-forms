rndefine("#RNMainSliderField",["#RNMainCore/EventManager","#RNMainFormBuilderCore/FieldBase.Options","lit","#RNMainFormBuilderCore/FieldWithPrice.Model","#RNMainCore/Sanitizer","#RNMainSingleLineGenerator/SingleLineGenerator","lit/decorators","#RNMainFormBuilderCore/FieldBase","#RNMainFormBuilderCore/FieldWithPrice","lit-html/directives/live.js","#RNMainCore/StoreBase","#RNMainFormBuilderCore/FieldWithPrice.Options"],(function(e,i,t,r,l,n,a,s,o,u,d,h){"use strict";class p extends r.FieldWithPriceModel{constructor(e,i){super(e,i),this.Value=0}InternalSerialize(e){super.InternalSerialize(e),e.Value=this.GetValue()}GetStoresInformation(){return!0}GetIsUsed(){return!!super.GetIsUsed()&&0!=this.Value}GetText(){return this.Value.toString()}GetValue(){if(!this.GetIsVisible())return"";let e=Math.max(this.Options.MinValue,this.Value);return e=Math.min(this.Options.MaxValue,e),e.toString()}SetValue(e){this.Value=l.Sanitizer.SanitizeNumber(e),this.FireValueChanged()}InitializeStartingValues(){this.CreateSingleLineGenerator(),this.Value=this.GetPreviousDataProperty("Value",this.Options.DefaultValue)}CreateSingleLineGenerator(){this.Generator=new n.SingleLineGenerator(this.FormBuilder,{ParseTagString:e=>"Slider"==e.Type?this.GetValue().toString():null})}render(){return t.html`<rn-slider-field .model="${this}"></rn-slider-field>`}}var m;let S=a.customElement("rn-slider-field")(m=class extends o.FieldWithPrice{static get properties(){return s.FieldBase.properties}SubRender(){var e;return t.html` <div style="position: relative;"> <input .min="${this.model.Options.MinValue}" .max="${this.model.Options.MaxValue}" .step="${this.model.Options.Step}" ?readOnly=${this.model.IsReadonly} @focus=${()=>{this.model.IsFocused=!0,this.model.Refresh()}} @blur=${()=>{this.model.IsFocused=!1,this.model.Refresh()}} class='rnInputPrice' style="width: 100%;" type='range' .value=${u.live(this.model.GetText())} @input=${e=>this.OnChange(e)}/> ${null===(e=this.model.Generator)||void 0===e?void 0:e.ParseContent(this.model.Options.ValueLabel)} </div> `}OnChange(e){this.model.SetValue(e.target.value)}})||m;var c,V,F;let M=(c=d.StoreDataType(Object),V=class extends h.FieldWithPriceOptions{constructor(...e){super(...e),babelHelpers.initializerDefineProperty(this,"ValueLabel",F,this)}LoadDefaultValues(){super.LoadDefaultValues(),this.Type=i.FieldTypeEnum.Slider,this.Label="Slider",this.PriceType=h.PriceTypeEnum.none,this.DefaultValue=0,this.MinValue=0,this.MaxValue=100,this.Step=1,this.ShowValueTooltip=!0,this.ValueLabel=null}},F=babelHelpers.applyDecoratedDescriptor(V.prototype,"ValueLabel",[c],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),V);exports.SliderFieldModel=p,exports.SliderField=S,exports.SliderFieldOptions=M,e.EventManager.Subscribe("GetFieldOptions",(e=>{if(e==i.FieldTypeEnum.Slider)return new M})),e.EventManager.Subscribe("GetFieldModel",(e=>{if(e.Options.Type==i.FieldTypeEnum.Slider)return new p(e.Options,e.Parent)}))}));
