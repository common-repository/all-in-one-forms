rndefine("#RNMainPasswordField",["#RNMainCore/EventManager","lit","#RNMainFormBuilderCore/FieldWithPrice.Model","#RNMainCore/Sanitizer","lit/decorators","#RNMainFormBuilderCore/FieldBase","#RNMainFormBuilderCore/IconDirective","#RNMainFormBuilderCore/FieldWithPrice","lit-html/directives/live.js","#RNMainCore/StoreBase","#RNMainFormBuilderCore/FieldWithPrice.Options","#RNMainFormBuilderCore/FormBuilder.Options"],(function(e,t,i,r,s,l,o,a,n,d,h,u){"use strict";class p extends i.FieldWithPriceModel{constructor(e,t){super(e,t),this._text=""}InternalSerialize(e){e.Value=this.GetValue()}get IsReadonly(){return!!this.Options.ReadOnly||super.IsReadonly}GetValue(){return this.GetIsVisible()?this._text:""}GetIsUsed(){return!!super.GetIsUsed()&&""!=this._text.trim()}render(){return t.html`<rn-password-field .model="${this}"></rn-password-field>`}SetText(e){return this._text=r.Sanitizer.SanitizeString(e),""!=this._text.trim()&&this.RemoveError("required"),this.FireValueChanged()}GetText(){return this.GetIsVisible()?this._text:""}InitializeStartingValues(e){this._text=this.GetPreviousDataProperty("Value",this.Options.DefaultText),this.FireValueChanged()}}var c;let F=s.customElement("rn-password-field")(c=class extends a.FieldWithPrice{static get properties(){return l.FieldBase.properties}SubRender(){return t.html` <div style="position: relative;"> <input ${o.IconDirective(this.model.Options.Icon)} ?readOnly=${this.model.IsReadonly} @focus=${()=>{this.model.IsFocused=!0,this.model.Refresh()}} @blur=${()=>{this.model.IsFocused=!1,this.model.Refresh()}} class='rnInputPrice' placeholder=${this.model.Options.Placeholder} style="width: 100%;" type='password' value=${n.live(this.model.GetText())} @input=${e=>this.OnChange(e)}/> </div> `}OnChange(e){this.model.SetText(e.target.value)}})||c;var m,I,O;let x=(m=d.StoreDataType(Object),I=class extends h.FieldWithPriceOptions{constructor(...e){super(...e),this.FreeCharOrWords=0,babelHelpers.initializerDefineProperty(this,"Icon",O,this)}LoadDefaultValues(){super.LoadDefaultValues(),this.ReadOnly=!1,this.Type="password",this.Label="Password",this.IgnoreSpaces=!1,this.Icon=(new u.IconOptions).Merge(),this.Placeholder="",this.DefaultText="",this.FreeCharOrWords=0}},O=babelHelpers.applyDecoratedDescriptor(I.prototype,"Icon",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),I);exports.PasswordFieldModel=p,exports.PasswordField=F,exports.PasswordFieldOptions=x,e.EventManager.Subscribe("GetFieldOptions",(e=>{if("password"==e)return new x})),e.EventManager.Subscribe("GetFieldModel",(e=>{if("password"==e.Options.Type)return new p(e.Options,e.Parent)}))}));
