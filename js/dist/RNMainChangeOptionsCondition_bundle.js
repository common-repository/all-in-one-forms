rndefine("#RNMainChangeOptionsCondition",["#RNMainFormBuilderCore/ConditionBase.Options","#RNMainCore/StoreBase","#RNMainFormBuilderCore/ItemOptions.Options","#RNMainCore/EventManager","#RNMainFormBuilderCore/FieldConditionProcessorBase","#RNMainFormBuilderCore/ConditionProcessorBase"],(function(e,i,n,t,o,r){"use strict";var s,a,p;let l=(s=i.StoreDataType(n.ItemOptions),a=class extends e.ConditionBaseOptions{constructor(...e){super(...e),babelHelpers.initializerDefineProperty(this,"Options",p,this)}LoadDefaultValues(){super.LoadDefaultValues(),this.Type="ChangeOptions",this.Options=[(new n.ItemOptions).Merge({Id:1,RegularPrice:"",Label:"Option 1"}),(new n.ItemOptions).Merge({Id:2,RegularPrice:"",Label:"Option 2"}),(new n.ItemOptions).Merge({Id:3,RegularPrice:"",Label:"Option 3"})]}},p=babelHelpers.applyDecoratedDescriptor(a.prototype,"Options",[s],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),a);class u extends o.FieldConditionProcessorBase{GetExecutionOrder(){return r.ExecutionOrder.FalseFirst}ExecuteFalseAction(e){this.Field.SetOptionsToUse(null)}ExecuteTruAction(e){this.Field.SetOptionsToUse(this.Condition.Options)}}exports.ChangeOptionsConditionOptions=l,t.EventManager.Subscribe("GetCondition",(e=>{if("ChangeOptions"==e.Type)return new l})),t.EventManager.Subscribe("GetConditionProcessor",(e=>{if("ChangeOptions"==e.Type)return new u}))}));
