rndefine("#RNMainDividerField",["#RNMainCore/EventManager","#RNMainFormBuilderCore/FieldBase.Options","lit/decorators","lit","#RNMainFormBuilderCore/FieldBase","#RNMainLit/Lit","#RNMainFormBuilderCore/FieldBase.Model","#RNMainCore/StoreBase","#RNMainFormBuilderCore/FormBuilder.Options"],(function(e,i,t,r,l,o,n,s,d){"use strict";var a;let p=t.customElement("rn-divider-field")(a=class extends l.FieldBase{static get properties(){return l.FieldBase.properties}SubRender(){let e=this.model.RootFormBuilder.GetHTML(this.model,this.model.Options,"Title").Code;return r.html` <div> ${o.rnIf(null!=e&&r.html`<h3 style="margin: 0;display: flex;align-items: center;"> <rn-icon-displayer style="display:inline-block;width:auto;margin-right:5px;" .icon=${this.model.Options.Icon} .formBuilder="${this.model.RootFormBuilder}"></rn-icon-displayer> ${e} </h3>`)} <hr style="margin-top:auto;width: 100%;border-style: ${this.model.Options.Style};border-color:${this.model.Options.Color};background: none;border-width: 1px;margin-bottom: 2px;"/> </div> `}})||a;class u extends n.FieldBaseModel{GetStoresInformation(){return!1}InternalSerialize(e){}InitializeStartingValues(){let e=this.RootFormBuilder.GetHTML(this,this.Options,"Title");null!=(null==e?void 0:e.Fields)&&e.Fields.forEach((e=>e.ValueChanged.Subscribe(this,(e=>this.Refresh()))))}SetTitle(e){this.Title=e}render(){return r.html`<rn-divider-field .model="${this}"></rn-divider-field>`}}var h,c,m,b,F;let y=(h=s.StoreDataType(Object),c=s.StoreDataType(Object),m=class extends i.FieldBaseOptions{constructor(...e){super(...e),babelHelpers.initializerDefineProperty(this,"Title",b,this),babelHelpers.initializerDefineProperty(this,"Icon",F,this)}LoadDefaultValues(){super.LoadDefaultValues(),this.Title=null,this.Type=i.FieldTypeEnum.Divider,this.Style="solid",this.Color="#dfdfdf",this.Icon=(new d.IconOptions).Merge()}},b=babelHelpers.applyDecoratedDescriptor(m.prototype,"Title",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),F=babelHelpers.applyDecoratedDescriptor(m.prototype,"Icon",[c],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),m);exports.DividerField=p,exports.DividerFieldModel=u,exports.DividerFieldOptions=y,e.EventManager.Subscribe("GetFieldOptions",(e=>{if(e==i.FieldTypeEnum.Divider)return new y})),e.EventManager.Subscribe("GetFieldModel",(e=>{if(e.Options.Type==i.FieldTypeEnum.Divider)return new u(e.Options,e.Parent)}))}));
